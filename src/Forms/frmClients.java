package Forms;

import classes.Client;
import classes.Data;
import classes.Product;
import classes.Utilidades;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmClients extends javax.swing.JInternalFrame {

    private Data myData;
    private int clientCurrent = 0;
    private boolean newAdd = false;
    private DefaultTableModel myTable;

    public void setData(Data myData) {
        this.myData = myData;
    }

    public frmClients() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdClient = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNames = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnFirst = new javax.swing.JButton();
        btnLatest = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txObligatory = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtObligatory2 = new javax.swing.JLabel();
        txtObligatory3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTableProducts = new javax.swing.JTable();
        cmbDocument = new javax.swing.JComboBox<>();
        txtLastNames = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbCity = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtObligatory4 = new javax.swing.JLabel();
        txtObligatory5 = new javax.swing.JLabel();
        dchDateOfBirth = new com.toedter.calendar.JDateChooser();
        dchAdmissionDate = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Usuarios");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("ID Cliente:");

        txtIdClient.setEnabled(false);
        txtIdClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClientActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombres:");

        txtNames.setEnabled(false);
        txtNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamesActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellidos:");

        txtAddress.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtAddress.setToolTipText("");
        txtAddress.setEnabled(false);
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        jLabel4.setText("Dirección:");

        jLabel5.setText("Tipo de Identificación:");

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnFirst.setToolTipText("Va al primer registro");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnLatest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/previus.png"))); // NOI18N
        btnLatest.setToolTipText("Va al ultimo registro");
        btnLatest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLatestActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/next.png"))); // NOI18N
        btnNext.setToolTipText("Adelante");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/end.png"))); // NOI18N
        btnLast.setToolTipText("Atrás");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnSearch.setToolTipText("Buscar registros");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btnSave.setToolTipText("Guardar registro");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        btnEdit.setToolTipText("Modificar el registro actual");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btnNew.setToolTipText("Crear nuevo registro");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDeleteProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnDeleteProduct.setToolTipText("Eliminar registro actual");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelUser.png"))); // NOI18N
        btnCancel.setToolTipText("Cancelar la operación");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txObligatory.setForeground(new java.awt.Color(255, 51, 51));
        txObligatory.setText("* Campos obligatorios");

        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("*");

        txtObligatory2.setForeground(new java.awt.Color(255, 51, 51));
        txtObligatory2.setText("*");

        txtObligatory3.setForeground(new java.awt.Color(255, 51, 51));
        txtObligatory3.setText("*");

        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("*");

        tblTableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTableProducts);

        cmbDocument.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un tipo", "Cédula de ciudadania", "NIT", "Tarjeta de identidad", "Registro Civil", "Cédula de extranjeria", "Pasaporte" }));
        cmbDocument.setEnabled(false);

        txtLastNames.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtLastNames.setToolTipText("");
        txtLastNames.setEnabled(false);
        txtLastNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNamesActionPerformed(evt);
            }
        });

        jLabel6.setText("Fecha de nacimiento:");

        txtPhone.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPhone.setToolTipText("");
        txtPhone.setEnabled(false);

        jLabel8.setText("Ciudad:");

        cmbCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una ciudad", "BOGOTÁ", "MEDELLÍN", "CALÍ", "BARRANQUILLA", "CARTAGENA", "CÚCUTA", "SOLEDAD", "IBAGUÉ", "BUCARAMANGA", "SANTA MARTA", "VILLAVICENCIO", "SOACHA", "PEREIRA", "BELLO", "VALLEDUPAR", "MONTERÍA", "PASTO", "MANIZALES", "BUENAVENTURA", "NEIVA", "BARRANCABERMEJA", "PALMIRA", "ARMENIA", "POPAYÁN", "SINCELEJO", "ITAGUI", "FLORIDABLANCA", "RIOHACHA", "ENVIGADO", "TULUÁ", "DOSQUEBRADAS", "SAN ANDRÉS DE TUMACO", "TUNJA", "GIRÓN", "APARTADÓ", "FLORENCIA", "URIBIA", "IPIALES", "TURBO", "MAICAO", "PIEDECUESTA", "YOPAL", "OCAÑA", "FUSAGASUGÁ", "CARTAGO", "FACATATIVÁ", "CHÍA", "MAGANGUÉ", "PITALITO", "CAUCASIA", "ZIPAQUIRÁ", "MALAMBO", "RIONEGRO", "LORICA", "JAMUNDI", "QUIBDÓ", "GUADALAJARA DE BUGA", "YUMBO", "SOGAMOSO", "DUITAMA", "GIRARDOT", "CIÉNAGA", " " }));
        cmbCity.setEnabled(false);

        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("*");

        jLabel11.setText("Telefono:");

        jLabel12.setText("Fecha de ingreso:");

        txtObligatory4.setForeground(new java.awt.Color(255, 51, 51));
        txtObligatory4.setText("*");

        txtObligatory5.setForeground(new java.awt.Color(255, 51, 51));
        txtObligatory5.setText("*");

        dchDateOfBirth.setEnabled(false);

        dchAdmissionDate.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLatest, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtObligatory3)
                                    .addComponent(txtObligatory2)
                                    .addComponent(txtObligatory4)))
                            .addComponent(txObligatory))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(10, 10, 10)
                                .addComponent(cmbDocument, 0, 167, Short.MAX_VALUE))
                            .addComponent(txtNames)
                            .addComponent(txtLastNames)
                            .addComponent(txtAddress)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dchDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(15, 15, 15)
                                        .addComponent(txtObligatory5, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dchAdmissionDate, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)))))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(cmbDocument, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtObligatory3)
                                    .addComponent(txtNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtObligatory2)
                                    .addComponent(txtLastNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel8)
                                        .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtObligatory4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(txtObligatory5)))
                            .addComponent(dchAdmissionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dchDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(txObligatory)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFirst)
                    .addComponent(btnLatest)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(btnNew)
                    .addComponent(btnSearch)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDeleteProduct)
                    .addComponent(btnCancel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamesActionPerformed

    private void btnLatestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLatestActionPerformed
        clientCurrent = myData.numberClients() - 1;
        showRegister();
    }//GEN-LAST:event_btnLatestActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        clientCurrent = 0;
        showRegister();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        clientCurrent++;
        if (clientCurrent == myData.numberClients()) {
            clientCurrent = 0;
        }
        showRegister();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        clientCurrent--;
        if (clientCurrent == -1) {
            clientCurrent = myData.numberClients() - 1;
        }
        showRegister();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String client = JOptionPane.showInputDialog("Ingrese código del cliente");
        if(client.equals("")){
            return;
        }
        int position = myData.clientPosition(client);
        if(position == -1){
            JOptionPane.showMessageDialog(rootPane, "Cliente no existe");
            return;
        }
        clientCurrent = position;
        showRegister();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        //Validate Data
        if (txtIdClient.getText().equals("")) {
            JOptionPane.showInternalMessageDialog(rootPane, "Debe digitar un ID de cliente.");
            txtIdClient.requestFocusInWindow();
            return;
        }
        if (cmbDocument.getSelectedIndex() == 0) {
            JOptionPane.showInternalMessageDialog(rootPane, "Debe seleccionar un tipo de documento");
            cmbDocument.requestFocusInWindow();
            return;
        }
        
        if (txtNames.getText().equals("")) {
            JOptionPane.showInternalMessageDialog(rootPane, "Debe digitar nombres.");
            txtNames.requestFocusInWindow();
            return;
        }
        
        if (txtLastNames.getText().equals("")) {
            JOptionPane.showInternalMessageDialog(rootPane, "Debe digitar apellidos.");
            txtLastNames.requestFocusInWindow();
            return;
        }
        
       
        if(dchDateOfBirth.getDate().after(new Date())){
            JOptionPane.showInternalMessageDialog(rootPane, "La fecha de nacimiento debe ser anterior a la fecha actual");
            cmbDocument.requestFocusInWindow();
            return;
        }
        
        if (cmbCity.getSelectedIndex() == 0) {
            JOptionPane.showInternalMessageDialog(rootPane, "Debe seleccionar una ciudad");
            cmbCity.requestFocusInWindow();
            return;
        }

        //If it is new, we validate that the client does not exist
        int position = myData.clientPosition(txtIdClient.getText());

        if (newAdd) {
            if (position != -1) {
                JOptionPane.showInternalMessageDialog(rootPane, "Cliente ya existe");
                txtIdClient.requestFocusInWindow();
                return;
            }
        } else {
            if (position == -1) {
                JOptionPane.showInternalMessageDialog(rootPane, "Cliente creado");
                txtIdClient.requestFocusInWindow();
                return;
            }
        }

       //We create the product object and add it to data
        Client myClient = new Client(txtIdClient.getText(),cmbDocument.getSelectedIndex(),
                txtNames.getText(),txtLastNames.getText(),txtAddress.getText(),txtPhone.getText(),
                cmbCity.getSelectedIndex(),dchDateOfBirth.getDate(), dchAdmissionDate.getDate());
        String msg;
        if (newAdd) {
            msg = myData.addClient(myClient);
        } else {
            msg = myData.editClient(myClient, position);
        }

        JOptionPane.showMessageDialog(rootPane, msg);

        //Enable Buttons
        btnFirst.setEnabled(true);
        btnLast.setEnabled(true);
        btnNext.setEnabled(true);
        btnLatest.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDeleteProduct.setEnabled(true);
        btnSearch.setEnabled(true);
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);

        //Disable Fields
        txtIdClient.setEnabled(false);
        cmbDocument.setEnabled(false);
        txtNames.setEnabled(false);
        txtLastNames.setEnabled(false);
        txtAddress.setEnabled(false);
        txtPhone.setEnabled(false);
        cmbCity.setEnabled(false);
        dchDateOfBirth.setEnabled(false);
        dchAdmissionDate.setEnabled(false);

        //Update table when changes are made
        fillTable();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        //Enable buttons
        btnFirst.setEnabled(false);
        btnLast.setEnabled(false);
        btnNext.setEnabled(false);
        btnLatest.setEnabled(false);
        btnEdit.setEnabled(false);
        btnDeleteProduct.setEnabled(false);
        btnSearch.setEnabled(false);
        btnSave.setEnabled(true);
        btnCancel.setEnabled(true);

        //Enable Fields
        txtIdClient.setEnabled(false);
        cmbDocument.setEnabled(true);
        txtNames.setEnabled(true);
        txtLastNames.setEnabled(true);
        txtAddress.setEnabled(true);
        txtPhone.setEnabled(true);
        cmbCity.setEnabled(true);
        dchDateOfBirth.setEnabled(true);
        dchAdmissionDate.setEnabled(false);

        //We activate the new register flag
        newAdd = false;

        //focus to ID field
        cmbDocument.requestFocusInWindow();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        //Enable buttons
        btnFirst.setEnabled(false);
        btnLast.setEnabled(false);
        btnNext.setEnabled(false);
        btnLatest.setEnabled(false);
        btnEdit.setEnabled(false);
        btnDeleteProduct.setEnabled(false);
        btnSearch.setEnabled(false);
        btnSave.setEnabled(true);
        btnCancel.setEnabled(true);

        //Enable Fields
        txtIdClient.setEnabled(true);
        cmbDocument.setEnabled(true);
        txtNames.setEnabled(true);
        txtLastNames.setEnabled(true);
        txtAddress.setEnabled(true);
        txtPhone.setEnabled(true);
        cmbCity.setEnabled(true);
        dchDateOfBirth.setEnabled(true);

        //Clear Fields
        txtIdClient.setText("");
        cmbDocument.setSelectedIndex(0);
        txtNames.setText("");
        txtLastNames.setText("");
        txtAddress.setText("");
        txtPhone.setText("");
        cmbCity.setSelectedIndex(0);
        dchDateOfBirth.setDate(new Date());
        dchAdmissionDate.setDate(new Date());

        //We activate the new register flag
        newAdd = true;

        //focus to ID field
        txtIdClient.requestFocusInWindow();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        int position = myData.productPosition(txtIdClient.getText());
        int answer = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de borrar el registro");
        if (answer != 0) {
            return;
        }
        String msg;
        msg = myData.deleteClient(position);
        JOptionPane.showMessageDialog(rootPane, msg);
        clientCurrent = 0;
        showRegister();

        //Update table when changes are made
        fillTable();
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //Enable Buttons
        btnFirst.setEnabled(true);
        btnLast.setEnabled(true);
        btnNext.setEnabled(true);
        btnLatest.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDeleteProduct.setEnabled(true);
        btnSearch.setEnabled(true);
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);

        //Disable Fields
        txtIdClient.setEnabled(false);
        cmbDocument.setEnabled(false);
        txtNames.setEnabled(false);
        txtLastNames.setEnabled(false);
        txtAddress.setEnabled(false);
        txtPhone.setEnabled(false);
        cmbCity.setEnabled(false);
        dchDateOfBirth.setEnabled(false);
        dchAdmissionDate.setEnabled(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        showRegister();
        fillTable();
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtIdClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdClientActionPerformed

    private void txtLastNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNamesActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void showRegister() {
        txtIdClient.setText(myData.getClients()[clientCurrent].getIdClient());
        cmbDocument.setSelectedIndex(myData.getClients()[clientCurrent].getIdDocument());
        txtNames.setText(myData.getClients()[clientCurrent].getNames());
        txtLastNames.setText(myData.getClients()[clientCurrent].getLastNames());
        txtAddress.setText(myData.getClients()[clientCurrent].getAddress());
        txtPhone.setText(myData.getClients()[clientCurrent].getPhone());
        cmbCity.setSelectedIndex(myData.getClients()[clientCurrent].getIdCity());
        dchDateOfBirth.setDate(myData.getClients()[clientCurrent].getDayOfBirth());
        dchAdmissionDate.setDate(myData.getClients()[clientCurrent].getAdmissionDay());
    }

    private void fillTable() {
        String titles[] = {"ID cliente","Tipo ID", "Nombres", "Apellidos", 
            "Dirección", "Teléfono", "Ciudad", "Fec. Nacimiento", "Fec. Ingreso"};
        String register[] = new String[9];
        myTable = new DefaultTableModel(null, titles);
        for (int i = 0; i < myData.numberClients(); i++) {
            register[0] = myData.getClients()[i].getIdClient();
            register[1] = typeDocument(myData.getClients()[i].getIdDocument());
            register[2] = myData.getClients()[i].getNames();
            register[3] = myData.getClients()[i].getLastNames();
            register[4] = myData.getClients()[i].getAddress();
            register[5] = myData.getClients()[i].getPhone();
            register[6] = nameCity(myData.getClients()[i].getIdCity());
            register[7] = "" +myData.getClients()[i].getDayOfBirth();
            register[8] = "" +myData.getClients()[i].getAdmissionDay();
            myTable.addRow(register);
        }
        tblTableProducts.setModel(myTable);
    }

    private String typeDocument(int idDocument) {
        switch(idDocument){
            case 1: return "Cédula de ciudadania";
            case 2: return "NIT";
            case 3: return "Tarjeta de identidad";
            case 4: return "Registro civil";
            case 5: return "Cédula de extranjeria";
            case 6: return "Pasaporte";
            default: return "No definido";
        }
    }
    
                    
    private String nameCity(int idCity){
        switch(idCity){
            case 1: return "Bogotá";
            case 2: return "Medellín";
            case 3: return "Cali";
            case 4: return "Barranquilla";
            case 5: return "Cartagena";
            case 6: return "Cúcuta";
            case 7: return "Soledad";
            case 8: return "Ibagué";
            case 9: return "Bucaramanga";
            case 10: return "Santa Marta";
            case 11: return "Villavicencio";
            case 12: return "Soacha";
            case 13: return "Pereira";
            default: return "No definido"; 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnLatest;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbCity;
    private javax.swing.JComboBox<String> cmbDocument;
    private com.toedter.calendar.JDateChooser dchAdmissionDate;
    private com.toedter.calendar.JDateChooser dchDateOfBirth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTableProducts;
    private javax.swing.JLabel txObligatory;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtIdClient;
    private javax.swing.JTextField txtLastNames;
    private javax.swing.JTextField txtNames;
    private javax.swing.JLabel txtObligatory2;
    private javax.swing.JLabel txtObligatory3;
    private javax.swing.JLabel txtObligatory4;
    private javax.swing.JLabel txtObligatory5;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
